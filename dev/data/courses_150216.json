[{"model": "courses.course", "pk": 1, "fields": {"course_batch": "FY16T3", "course_code": "10.009", "school": "SUTD", "department": "ISTD", "title": "Digital World", "description": "An introduction to computational thinking and computer programming. We assume no prior background in programming and we begin with a basic framework for problem solving technique. We start from basics of representation of data and move to a more abstract types. We emphasize general patterns and abstraction as well as apply methods of object-oriented programming for clarity and reusability of software. Examples to be drawn from the four pillars of SUTD society.", "programming_language": "Python", "start_date": "2016-01-25", "end_date": "2016-08-01", "date_created": "2016-02-01T02:55:49.470Z"}}, {"model": "courses.cohortclass", "pk": 1, "fields": {"label": "1", "course": 1, "students": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "teachers": [1, 3, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124]}}, {"model": "courses.cohortclass", "pk": 2, "fields": {"label": "2", "course": 1, "students": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 125, 126, 127], "teachers": [1]}}, {"model": "courses.week", "pk": 1, "fields": {"number": 1, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 2, "fields": {"number": 2, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 3, "fields": {"number": 3, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 4, "fields": {"number": 4, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 5, "fields": {"number": 5, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 6, "fields": {"number": 6, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 7, "fields": {"number": 7, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 8, "fields": {"number": 8, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 9, "fields": {"number": 9, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 10, "fields": {"number": 10, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 11, "fields": {"number": 11, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 12, "fields": {"number": 12, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 13, "fields": {"number": 13, "instruction": "", "course": 1}}, {"model": "courses.week", "pk": 14, "fields": {"number": 14, "instruction": "", "course": 1}}, {"model": "courses.assessment", "pk": 1, "fields": {"type": "5", "label": "2", "start_datetime": "2016-01-30T16:00:00Z", "end_datetime": "2016-02-06T15:59:00Z", "week": 2, "cohort_classes": [1]}}, {"model": "courses.assessment", "pk": 2, "fields": {"type": "4", "label": "2", "start_datetime": "2016-01-31T16:00:00Z", "end_datetime": "2016-02-07T15:59:00Z", "week": 2, "cohort_classes": [1]}}, {"model": "courses.programmingquestion", "pk": 1, "fields": {"assessment": 2, "number": 1, "type": 0, "description": "<p>Functions: Temperature conversion: Write a function named <b>fToC()</b>. This function takes a fahrenheit value as input and returns its centigrade equivalent. Recall: If C denotes the centigrade value and F its fahrenheit equivalent, then\u00a0<span><b>F = C \u2217 9/5 + 32</b>.\u00a0</span></p><p><span><br/></span></p><p><span><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\">Please round the output to 2 decimal places.</b><br/></span></p><p><span><br/></span></p><p><span>For example:</span></p><p><span><br/></span></p><p><span>&gt;&gt;&gt;print fToC(32)\u00a0</span></p><p><span>0.0</span></p><p><span>&gt;&gt;&gt;print fToC(-40)\u00a0</span></p><p><span>-25.56</span></p><p><span>&gt;&gt;&gt;print fToC(212)\u00a0</span></p><p><span>100.0</span></p>", "solution": "def fToC(f):\n    return round((f-32)*5.0/9,2)", "code_signature": "fToC", "default_code": "# YOUR CODE HERE"}}, {"model": "courses.programmingquestion", "pk": 2, "fields": {"assessment": 2, "number": 2, "type": 0, "description": "<p>Functions: Number of years and days: Write a function that takes in minutes as its input parameter, and returns the number of years and days for the minutes. For simplicity,assume a year has 365 days.\u00a0</p><p><br/></p><p>For example,</p><p><br/></p><p>&gt;&gt;&gt;print yearsDays(1000000000)\u00a0</p><p>(1902 , 214)</p><p>&gt;&gt;&gt;print yearsDays (2000000000)\u00a0</p><p>(3805 , 63)</p>", "solution": "def yearsDays(minutes):\r\n    hours=minutes/60\r\n    days=hours/24\r\n    years=days/365\r\n    daysrem=days%365\r\n    return years,daysrem", "code_signature": "yearsDays", "default_code": "# YOUR CODE HERE"}}, {"model": "courses.programmingquestion", "pk": 3, "fields": {"assessment": 2, "number": 3, "type": 0, "description": "<p>Functions: multivalued: Recall the following equation that gives the height of a ball at time t when it is thrown with an initial velocity of v0.</p><p><br/></p><p>y(t) = v_0*t \u2212 (1/2)*gt^2</p><p><br/></p><p>Write a function named posVel() that takes v0 and t as inputs and returns y(t) and y\u2032(t), where y\u2032(t) is the first derivative of y(t) with respect to t. Use your knowledge of calculus to find the formula to calculate y\u2032(t). Think of the appropriate place where you will define the gravitational constant g. Return the following values to 2-decimal places: posVal(5, 10), posVal(5, -10), posVal(5, 0), and posVal(0, 5). Use <b>g = 9.81 m s^\u22122</b>.</p><p><br/></p><p><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\">Please round the output to 2 decimal places.</b><br/></p><p><br/></p><p>&gt;&gt;&gt;print posVel(5.0, 10.0)</p><p>( -440.5, -93.1)</p><p>&gt;&gt;&gt;print posVel(5.0, 0.0)</p><p>(0.0 , 5.0)</p><p>&gt;&gt;&gt;print posVel(0.0, 5.0)</p><p>( -122.62, -49.05)</p>", "solution": "G = 9.81\r\n\r\ndef posVel(v,t):\r\n    if (t < 0):\r\n        return None, None\r\n\r\n    y = v*t-0.5*G*(t**2)\r\n    dy = v - G*t\r\n\r\n    return round(y,2), round(dy,2)", "code_signature": "posVel", "default_code": "# YOUR CODE HERE"}}, {"model": "courses.programmingquestion", "pk": 4, "fields": {"assessment": 1, "number": 1, "type": 0, "description": "<p>Functions: Temperature conversion: Write a function named cToF() that returns the fahrenheit equivalent of a centigrade value input as an argument.</p><p><br/></p><p><b>Please round the output to 2 decimal places.</b></p><p><br/></p><p>&gt;&gt;&gt;print cToF(0)\u00a0</p><p>32.0</p><p>&gt;&gt;&gt;print cToF(-40)\u00a0</p><p>-40.0</p><p>&gt;&gt;&gt;print cToF(100)\u00a0</p><p>212.0</p>", "solution": "def cToF(C):\r\n    F = 9.0/5 * C + 32\r\n    return F", "code_signature": "cToF", "default_code": ""}}, {"model": "courses.programmingquestion", "pk": 5, "fields": {"assessment": 1, "number": 3, "type": 0, "description": "<p>Functions: Wind-chill temperature How cold is outside? The temperature alone is not enough to provide the answer. Other factors including wind speed, relative humidity, and sunshine play important roles in determining coldness outside. In 2001, the National Weather Service (NWS) implemented the new wind-chill temperature to measure the coldness using temperature and wind speed.</p><p><br/></p><p>t_wc = 35.74 + 0.6215 * t_a - 35.75 * v^0.16 + 0.4275 * t_a * v^0.16</p><p><br/></p><p>where ta is the outside temperature measured in Fahrenheit and v is the speed measuredin miles per hour. twc is the wind-chill temperature.Write a function that takes in a temperature between \u221258\u25e6F and 41\u25e6F and a wind speedgreater than or equal to 2 and returns the wind-chill temperature.</p><p><br/></p><p><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\">Please round the output to 2 decimal places.</b><br/></p><p><br/></p><p>&gt;&gt;&gt;print windChillTemp(5.3,6)\u00a0</p><p>-5.57</p><p>&gt;&gt;&gt;print windChillTemp(2.2,4)\u00a0</p><p>-6.35</p>", "solution": "Wind-chill temperature\r\ndef windChillTemp(ta, v):\r\n    if ta < -58 or ta>41 or v < 2:\r\n        return None\r\n    return 35.74+0.6215*ta-35.75*v**0.16+0.4275*ta*v**0.16", "code_signature": "windChillTemp", "default_code": ""}}, {"model": "courses.programmingquestion", "pk": 6, "fields": {"assessment": 1, "number": 4, "type": 0, "description": "<p><span>Functions: BMI: Write a function that takes in your weight in pounds and your height in inches, and returns the Body Mass Index (BMI) of the person. The BMI can be calculated by taking the weight in kilograms and dividing it by the square of your height in meters.Note that one pound is 0.45359237 and one inch is 0.0254 meters.</span><br/></p><p><span><br/></span></p><p><span><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\">Please round the output to 2 decimal places.</b><br/></span></p><p><span><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\"><br/></b></span></p><p>For example:</p><p>&gt;&gt;&gt;print bmi(120,60)\u00a0</p><p>23.44\u00a0</p><p>&gt;&gt;&gt;print bmi(100,50)\u00a0</p><p>28.12</p><p>&gt;&gt;&gt;print bmi(200,80)\u00a0</p><p>21.97</p><p>&gt;&gt;&gt;print bmi(95.5,50)\u00a0</p><p>26.86</p>", "solution": "def bmi(weight,height):\r\n    weightKg=weight*0.45359237\r\n    heightM=height*0.0254\r\n    return weightKg/(heightM*heightM)", "code_signature": "bmi", "default_code": ""}}, {"model": "courses.programmingquestion", "pk": 7, "fields": {"assessment": 1, "number": 5, "type": 0, "description": "<p><span>Functions: Future investment value: Write a function that takes in an investment amount, the annual interest rate, and the number of years, and returns the future investment value using the following formula:</span><br/></p><p><br/></p><p>futureInvestmentValue = investmentAmount \u00d7 (1 + monthlyInterestRate)^numberOfMonths</p><p><br/></p><p><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\">Please round the output to 2 decimal places.</b><br/></p><p><br/></p><p>For example:</p><p>&gt;&gt;&gt;print investmentVal(1000,4.25,1)\u00a0</p><p>1043.34</p><p>&gt;&gt;&gt;print investmentVal(1500,3.25,2)\u00a0</p><p>1600.6</p><p>&gt;&gt;&gt;print investmentVal(1000,2.25,0.5)\u00a0</p><p>1011.3</p><p>&gt;&gt;&gt;print investmentVal(2000,4.25,3)\u00a0</p><p>2271.46</p><p><br/></p><p>Round the answer to two decimal places.</p>", "solution": "def investmentVal(amount, annualRate, years):\n    monthRate=(annualRate/100.0)/12.0\n    months=years*12\n    return round(amount*(1+monthRate)**months,2)", "code_signature": "investmentVal", "default_code": ""}}, {"model": "courses.programmingquestion", "pk": 8, "fields": {"assessment": 1, "number": 2, "type": 0, "description": "<p>Functions: Volume of a cylinder Write a function that takes in the radius and the length of a cylinder and returns the area and volume using the following formulas:<br/></p><p><br/></p><p>area = radius \u2217 radius \u2217 \u03c0<br/></p><p>volume = area \u2217 length<br/></p><p><br/></p><p><b>Please round the output to 2 decimal places.</b><br/></p><p><br/></p><p>For example,\u00a0</p><p>&gt;&gt;&gt;print areaCylinder(1.0,2.0)\u00a0</p><p>(3.14, 6.28)\u00a0</p><p>&gt;&gt;&gt;print areaCylinder(2.0,2.3)\u00a0</p><p>(12.57, 28.90)\u00a0</p><p>&gt;&gt;&gt;print areaCylinder(1.5,4)\u00a0</p><p>(7.07, 28.27)\u00a0</p><p>&gt;&gt;&gt;print areaCylinder(2.2,5.0)\u00a0</p><p>(15.21, 76.03)<br/></p>", "solution": "from math import pi\ndef areaCylinder(radius,length):\n    area=radius*radius*pi\n    vol=area*length\n    return area, vol", "code_signature": "areaCylinder", "default_code": "# YOUR CODE HERE"}}, {"model": "courses.checkoffquestion", "pk": 2, "fields": {"assessment": 2, "number": 5, "type": 3, "description": "<p><b style=\"color: rgb(0, 56, 77);background-color: rgb(254, 254, 254);\">Checkoff: please complete the task below and demonstrate to a faculty member.</b><br/></p><p><br/></p><p>Functions: Compound value: Suppose you save $100 each month into a saving ac- count with an annual interest rate of 5%. Therefore, the monthly interest rate is 0.05/12=0.00417. After the first month, the value in the account becomes\u00a0<span><b>100 \u2217 (1 + 0.00417) = 100.417.\u00a0</b></span><span>After the second month, the value in the account becomes (100 + 100.417) \u2217 (1 + 0.00417) = 201.252After the third month, the value in the account becomes (100 + 201.252) \u2217 (1 + 0.00417) = 302.507 and so on.</span></p><p><br/></p><p>.&gt;&gt;&gt;print compoundVal6Months(100,0.05)\u00a0</p><p>608.811017706</p><p>&gt;&gt;&gt;print compoundVal6Months(100,0.03)\u00a0</p><p>605.27192977</p><p>&gt;&gt;&gt;print compoundVal6Months(200,0.05)\u00a0</p><p>1217.62203541</p><p>&gt;&gt;&gt;print compoundVal6Months(200,0.03)\u00a0</p><p>1210.54385954</p><p><br/></p><p>Write a function that takes in a monthly saving amount and an annual interest rate, and returns the account value after the sixth month.\u00a0</p><p><br/></p><p>Write a test program that prompts the user the monthly saving amount and displays the account value. Here is a sample run. Enter the monthly saving amount: 100</p><p>Enter annual interest rate: 0.05</p><p>After the sixth month, the account value is 608.81</p>", "solution": null}}, {"model": "courses.checkoffquestion", "pk": 3, "fields": {"assessment": 2, "number": 4, "type": 3, "description": "<p><b>Checkoff: please complete the task below and demonstrate to a faculty member.</b></p><p><b><br/></b></p><p>Functions: Area of a Triangle: Write a function that takes in the three points (x1,y1), (x2,y2), and (x3,y3) of a triangle and returns its area.<br/></p>", "solution": null}}, {"model": "courses.unittest", "pk": 1, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 1, "inputs": "[\"32\"]", "expected_output": "0.0"}}, {"model": "courses.unittest", "pk": 2, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 1, "inputs": "[\"-14\"]", "expected_output": "-25.56"}}, {"model": "courses.unittest", "pk": 3, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 1, "inputs": "[\"212\"]", "expected_output": "100.0"}}, {"model": "courses.unittest", "pk": 4, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 2, "inputs": "[\"1000000000\"]", "expected_output": "(1902, 214)"}}, {"model": "courses.unittest", "pk": 5, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 2, "inputs": "[\"2000000000\"]", "expected_output": "(3805, 63)"}}, {"model": "courses.unittest", "pk": 6, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 3, "inputs": "[\"0.0\", \"5.0\"]", "expected_output": "(-122.63, -49.05)"}}, {"model": "courses.unittest", "pk": 7, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 3, "inputs": "[\"5.0\", \"0.0\"]", "expected_output": "(0.0, 5.0)"}}, {"model": "courses.unittest", "pk": 8, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 3, "inputs": "[\"5.0\", \"10.0\"]", "expected_output": "(-440.5, -93.1)"}}, {"model": "courses.unittest", "pk": 9, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 4, "inputs": "[\"0\"]", "expected_output": "32.0"}}, {"model": "courses.unittest", "pk": 10, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 4, "inputs": "[\"-40\"]", "expected_output": "-40.0"}}, {"model": "courses.unittest", "pk": 11, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 4, "inputs": "[\"100\"]", "expected_output": "212.0"}}, {"model": "courses.unittest", "pk": 14, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 5, "inputs": "[\"2.2\", \"4\"]", "expected_output": "-6.35"}}, {"model": "courses.unittest", "pk": 15, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 5, "inputs": "[\"5.3\", \"6\"]", "expected_output": "-5.57"}}, {"model": "courses.unittest", "pk": 16, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 6, "inputs": "[\"120\", \"60\"]", "expected_output": "23.44"}}, {"model": "courses.unittest", "pk": 17, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 6, "inputs": "[\"100\", \"50\"]", "expected_output": "28.12"}}, {"model": "courses.unittest", "pk": 19, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 6, "inputs": "[\"200\", \"80\"]", "expected_output": "21.97"}}, {"model": "courses.unittest", "pk": 20, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 6, "inputs": "[\"95.5\", \"50\"]", "expected_output": "26.86"}}, {"model": "courses.unittest", "pk": 22, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 7, "inputs": "[\"1000\", \"4.25\", \"1\"]", "expected_output": "1043.34"}}, {"model": "courses.unittest", "pk": 23, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 7, "inputs": "[\"1500\", \"3.25\", \"2\"]", "expected_output": "1600.6"}}, {"model": "courses.unittest", "pk": 24, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 7, "inputs": "[\"1000\", \"2.25\", \"0.5\"]", "expected_output": "1011.3"}}, {"model": "courses.unittest", "pk": 25, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 7, "inputs": "[\"2000\", \"4.25\", \"3\"]", "expected_output": "2271.46"}}, {"model": "courses.unittest", "pk": 26, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 8, "inputs": "[\"1.0\", \"2.0\"]", "expected_output": "(3.14, 6.28)"}}, {"model": "courses.unittest", "pk": 27, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 8, "inputs": "[\"2.0\", \"2.3\"]", "expected_output": "(12.57, 28.9)"}}, {"model": "courses.unittest", "pk": 28, "fields": {"visibility": 1, "type": 0, "test_content": "", "question": 8, "inputs": "[\"1.5\", \"4\"]", "expected_output": "(7.07, 28.27)"}}, {"model": "courses.unittest", "pk": 29, "fields": {"visibility": 0, "type": 0, "test_content": "", "question": 8, "inputs": "[\"2.2\", \"5.0\"]", "expected_output": "(15.21, 76.03)"}}]